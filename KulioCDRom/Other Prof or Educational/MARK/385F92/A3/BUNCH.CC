// bunch.cc 11/14/92  M.H. Atkinson// doctored up for some kind of turn in 12/9/92#include "bunch.h"#include <iostream.h>#include <string.h>bunch::bunch(): autoarray( sizeof( char ), 10, 10 ){	ipos = 0;		// position within	itemcount = 0;		}bunch::~bunch(){ }  bunch& bunch::operator=( const bunch& b ){	autoarray::operator=( b );//call down the inherited chain	itemcount = b.itemcount;	return *this;}void bunch::insert( char c ){	//cout<<"in bunch::insert"<< '\n';	//cout<<"check for mem in bunch::insert"<< '\n';	if(!member(c))				{ 	//cout<<"calling auto::set"<<'\n';		set( itemcount, &c);	// insert in next position		itemcount++;		// increment	}			//	cout << itemcount << '\n';	// this line test inc of itemcount}							//****************************************************************************//  I was going to use this in somthing but I don't remember how or wherevoid bunch::find ( char c){	long int i = 0;	char tmp;	ipos = 0;				// set ini unfound cond	while( (i<=itemcount) && (!ipos) )	// counting on nonzero as TRUE	{ 	get(i,&tmp);		if( c == tmp)		{	ipos = i;	// indicate pos of 1st occurance		}		else			i++;	}}//**************************************************************************** void bunch::remove( char c ){ 	if(member(c))			safearray::deletecell(ipos);}void bunch::removeall(){	while( itemcount >= 0 )	{	safearray::deletecell(itemcount);		itemcount--;	}		 }boolean bunch::member( char c ) const {	char ch;	long int i=0;	boolean found = FALSE;	while( (i <= (itemcount-1)) && (!found))	{	//cout<<"calling auto::get"<<'\n';		get(i,&ch);		if( c == ch)		{	found = TRUE;			ipos = i;		}		else			i++;	}	return found;}void bunch::print( ostream& os ) const{	char tempchar;	long int i ;			os << "{ ";	for( i=0; i<= (itemcount-1);i++) 	{	get(i,&tempchar);		os << tempchar;	}	os << " }";}char bunch::geti( long i ) const{	char rtn_ch;		get(i, &rtn_ch );		return rtn_ch;}//******************************************************************////					END OF FILE BUNCH.CC////******************************************************************   