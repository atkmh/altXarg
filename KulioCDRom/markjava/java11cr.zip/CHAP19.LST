listing 1
// Demonstrate the 1.0 mouse event handlers.
import java.awt.*;
import java.applet.*;
/*
<applet code="MouseEvents" width=300 height=100>
</applet>
*/

public class MouseEvents extends Applet{
  String msg = "";
  int mouseX = 0, mouseY = 0; // coordinates of mouse

  // Handle button press.
  public boolean mouseDown(Event evtObj, int x, int y) {
    // save coordinates
    mouseX = x;
    mouseY = y;
    msg = "Down";
    repaint();

    return true;
  }

  // Handle button release.
  public boolean mouseUp(Event evtObj, int x, int y) {
    // save coordinates
    mouseX = x;
    mouseY = y;
    msg = "Up";
    repaint();

    return true;
  }
  // Handle mouse move.
  public boolean mouseMove(Event evtObj, int x, int y) {
    // save coordinates
    showStatus("Moving mouse at " + x + ", " + y);

    return true;
  }

  // Handle mouse drag.
  public boolean mouseDrag(Event evtObj, int x, int y) {
    // save coordinates
    mouseX = x;
    mouseY = y;
    msg = "*";
    showStatus("Dragging mouse at " + x + ", " + y);
    repaint();

    return true;
  }

  // Handle mouse enter.
  public boolean mouseEnter(Event evtObj, int x, int y) {
    // save coordinates
    mouseX = 0;
    mouseY = 10;
    msg = "Mouse just entered.";
    repaint();

    return true;
  }

  // Handle mouse exit.
  public boolean mouseExit(Event evtObj, int x, int y) {
    // save coordinates
    mouseX = 0;
    mouseY = 10;
    msg = "Mouse just left.";
    repaint();

    return true;
  }
  // Display msg in applet window at current X,Y location.
  public void paint(Graphics g) {
    g.drawString(msg, mouseX, mouseY);
  }
}

listing 2
// Demonstrate a 1.0 keyboard event handler.
import java.awt.*;
import java.applet.*;
/*
<applet code="SimpleKey" width=300 height=100>
</applet>
*/

public class SimpleKey extends Applet{
  String msg = "";

  // Handle keypress events.
  public boolean keyDown(Event evtObj, int key) {
    msg += (char) key;
    repaint();
    showStatus("Key Down");

    return true;
  }

  // Handle key release events.
  public boolean keyUp(Event evtObj, int key) {
    showStatus("Key Up");

    return true;
  }

  // Display keystrokes.
  public void paint(Graphics g) {
    g.drawString(msg, 10, 20);
  }
}

listing 3
// Demonstrate key constants.
import java.awt.*;
import java.applet.*;
/*
<applet code="KeyEvents" width=300 height=100>
</applet>
*/

public class KeyEvents extends Applet{
  String msg = "";

  // Handle keypress events.
  public boolean keyDown(Event evtObj, int key) {
    switch(key) {
      case Event.F1:
        msg += "<F1>";
        break;
      case Event.F2:
        msg += "<F2>";
        break;
      case Event.F3:
        msg += "<F3>";
        break;
      case Event.PGDN:
        msg += "<PgDn>";
        break;
      case Event.PGUP:
        msg += "<PgUp>";
        break;
      case Event.LEFT:
        msg += "<Left Arrow>";
        break;
      case Event.RIGHT:
        msg += "<Right Arrow>";
        break;
      default:
        msg += (char) key;
    }

    repaint();
    showStatus("Key Down");

    return true;
  }

  // Handle key release events.
  public boolean keyUp(Event evtObj, int key) {
    showStatus("Key Up");
    return true;
  }

  // Display keystrokes.
  public void paint(Graphics g) {
    g.drawString(msg, 10, 20);
  }
}

listing 4
// Demonstrate the 1.1 mouse event handlers.
import java.awt.*;
import java.awt.event.*;
import java.applet.*;
/*
  <applet code="NewMouseEvents" width=300 height=100>
  </applet>
*/

public class NewMouseEvents extends Applet
  implements MouseListener, MouseMotionListener {

  String msg = "";
  int mouseX = 0, mouseY = 0; // coordinates of mouse

  public void init() {
     addMouseListener(this);
     addMouseMotionListener(this);
  }

  // Handle mouse clicked.
  public void mouseClicked(MouseEvent me) {
    // save coordinates
    mouseX = 0;
    mouseY = 10;
    msg = "Mouse clicked.";
    repaint();
  }

  // Handle mouse entered.
  public void mouseEntered(MouseEvent me) {
    // save coordinates
    mouseX = 0;
    mouseY = 10;
    msg = "Mouse entered.";
    repaint();
  }

  // Handle mouse exited.
  public void mouseExited(MouseEvent me) {
    // save coordinates
    mouseX = 0;
    mouseY = 10;
    msg = "Mouse exited.";
    repaint();
  }

  // Handle button pressed.
  public void mousePressed(MouseEvent me) {
    // save coordinates
    mouseX = me.getX();
    mouseY = me.getY();
    msg = "Down";
    repaint();
  }

  // Handle button released.
  public void mouseReleased(MouseEvent me) {
    // save coordinates
    mouseX = me.getX();
    mouseY = me.getY();
    msg = "Up";
    repaint();
  }

  // Handle mouse dragged.
  public void mouseDragged(MouseEvent me) {
    // save coordinates
    mouseX = me.getX();
    mouseY = me.getY();
    msg = "*";
    showStatus("Dragging mouse at " + mouseX + ", " + mouseY);
    repaint();
  }

  // Handle mouse moved.
  public void mouseMoved(MouseEvent me) {
    // show status
    showStatus("Moving mouse at " + me.getX() + ", " + me.getY());
  }

  // Display msg in applet window at current X,Y location.
  public void paint(Graphics g) {
    g.drawString(msg, mouseX, mouseY);
  }    
}

listing 5
import java.awt.*;
import java.awt.event.*;
import java.applet.*;
/*
  <applet code="AdapterDemo" width=300 height=100>
  </applet>
*/

public class AdapterDemo extends Applet {
  public void init() {
     addMouseListener(new MyMouseAdapter(this));
     addMouseMotionListener(new MyMouseMotionAdapter(this));
  }
}

class MyMouseAdapter extends MouseAdapter {
  AdapterDemo adapterDemo;
  public MyMouseAdapter(AdapterDemo adapterDemo) {
    this.adapterDemo = adapterDemo;
  }
  // Handle mouse clicked.
  public void mouseClicked(MouseEvent me) {
    adapterDemo.showStatus("Mouse clicked");
  }
}

class MyMouseMotionAdapter extends MouseMotionAdapter {
  AdapterDemo adapterDemo;
  public MyMouseMotionAdapter(AdapterDemo adapterDemo) {
    this.adapterDemo = adapterDemo;
  }
  // Handle mouse dragged.
  public void mouseDragged(MouseEvent me) {
    adapterDemo.showStatus("Mouse dragged");
  } 
}

listing 6
// Adapter class demo
import java.applet.*;
import java.awt.event.*;
/*
  <applet code="MousePressedDemo" width=200 height=100>
  </applet>
 
*/
 
public class MousePressedDemo extends Applet {
  public void init() {
    addMouseListener(new MyMouseAdapter(this));
  }
}

class MyMouseAdapter extends MouseAdapter {
  MousePressedDemo mousePressedDemo;
  public MyMouseAdapter(MousePressedDemo mousePressedDemo) {
    this.mousePressedDemo = mousePressedDemo;
  }
  public void mousePressed(MouseEvent me) {
    mousePressedDemo.showStatus("Mouse Pressed.");
  }
}

listing 7
// Inner class demo
import java.applet.*;
import java.awt.event.*;
/*
  <applet code="InnerClassDemo" width=200 height=100>
  </applet>
 
*/
 
public class InnerClassDemo extends Applet {
  public void init() {
    addMouseListener(new MyMouseAdapter());
  }
  class MyMouseAdapter extends MouseAdapter {
    public void mousePressed(MouseEvent me) {
      showStatus("Mouse Pressed");
    }
  }
}

listing 8
// Anonymous Inner class demo
import java.applet.*;
import java.awt.event.*;
/*
  <applet code="AnonymousInnerClassDemo" width=200 height=100>
  </applet>
 
*/
 
public class AnonymousInnerClassDemo extends Applet {
  public void init() {
    addMouseListener(new MouseAdapter() {
      public void mousePressed(MouseEvent me) {
        showStatus("Mouse Pressed");
      }
    });
  }
}

